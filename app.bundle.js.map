{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/year-selector.js","webpack:///./src/selection-info.js","webpack:///./src/selection-handler.js","webpack:///./src/hover-handler.js","webpack:///./src/candidate-info.js","webpack:///./src/cartogram-renderer.js","webpack:///./src/election-data-loader.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","THREE","AFRAME","DARK_GRAY","Color","REPUBLICAN_RED","DEMOCRAT_BLUE","LIBERTARIAN_GOLD","GREEN_PARTY_GREEN","INDEPENDENT_PURPLE","YEARS","_constants","registerComponent","schema","selectedYear","type","selectionColor","default","init","this","handleHoverStart","handleHoverEnd","handleStateChange","createButtons","update","oldData","_this","forEach","year","button","buttons","setAttribute","el","emit","remove","_this2","buttonBorder","querySelector","removeEventListener","evt","_this3","detail","target","hand","components","haptics","pulse","_this4","xPos","document","createElement","primitive","height","width","addEventListener","buttonWidth","appendChild","_d3Format","state","candidate","party","votes","totalVotes","percentage","color","voteFormatter","format","totalVoteFormatter","percentageFormatter","getInfoText","selectionBox","Box3Helper","Box3","visible","setObject3D","stateBox","infoPanelAnchorPosition","Vector3","infoPanel","infoPanelText","infoPanelHighlight","superHands","handleControllerChange","handleSelection","turnSelectionOff","sceneEl","level","targetEl","isAlreadySelected","isSelectable","setSelectionTo","selected","selectedObj","getObject3D","geometry","computeBoundingBox","showSelectionBoxFor","showInfoPanel","selectedObjWorldCenter","getWorldPosition","boxCenter","object3D","worldToLocal","setFromCenterAndSize","boundingBox","getSize","box","selectionInfoComp","calculateInfoPanelAnchorPosition","position","copy","setFromObject","parentEl","getCenter","setY","max","y","needsPositionUpdate","equals","tick","hoverBox","hoverable","constants","candidateInfo","Trump, Donald J.","firstName","lastName","Clinton, Hillary","Johnson, Gary","Stein, Jill","McMullin, Evan","Obama, Barack","Romney, Mitt","McCain, John","Nader, Ralph","Barr, Bob","Bush, George W.","Kerry, John F.","Badnarik, Michael","_d3Scale","_candidateInfo","invisibleMaterial","MeshBasicMaterial","dependencies","maxExtrudeHeight","geoProjectionComponent","system","systems","handleGeoDataReady","handleElectionDataReady","clearMap","render","electionDataLoadEvent","votesByFipsCode","maxTotalVoters","isReady","geoJson","extrudeScale","scaleLinear","domain","range","candidateMetadata","features","feature","votingData","id","stateShapes","renderToContext","projection","toShapes","zPosition","stateSelectionEntity","candidateData","totalVoters","info","_candidateInfo2","_extends","Geometry","candidateMetadatum","extrudeGeometry","featureGeometry","extrudeSettings","amount","bevelEnabled","stateShape","extrudedFeatureGeometry","ExtrudeGeometry","center","scale","translate","x","z","merge","createExtrudedAndScaledGeometryPerShape","createExtrudedAndScaledGeometry","candidateName","attributes","properties","getHexString","selectionMask","inputGeometry","selectionMaskGeometry","BufferGeometry","fromGeometry","mesh","Mesh","selectionMaskEntity","createSelectionMask","keys","extrudeBufferGeometry","material","MeshLambertMaterial","extrudedMap","mapRenderContextForOutline","stateOutlineGeometry","stateOutlineVertices","toVertices","addAttribute","Float32BufferAttribute","stateOutlineMaterial","LineBasicMaterial","stateOutlines","LineSegments","clearAll","arguments","undefined","object3DMap","key","includes","removeObject3D","querySelectorAll","maskEl","removeChild","_maxvoters","handleDataLoaded","handleYearChanged","yearText","fetch","then","response","json","catch","error","console","reduce","accum","fips","_maxvoters2"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([26,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const { AFRAME } = window;\nconst { THREE } = AFRAME;\n\nexport const DARK_GRAY = new THREE.Color(0x56565a);\nexport const REPUBLICAN_RED = new THREE.Color(0xE91D0E);\nexport const DEMOCRAT_BLUE = new THREE.Color(0x232066);\nexport const LIBERTARIAN_GOLD = new THREE.Color(0xE5C601);\nexport const GREEN_PARTY_GREEN = new THREE.Color(0x00A95C);\nexport const INDEPENDENT_PURPLE = new THREE.Color(0x9400D3);\n\nexport const YEARS = ['2016', '2012', '2008', '2004'];\n","import 'aframe';\nimport { YEARS } from './constants';\n\nconst { AFRAME } = window;\n\n/**\n * Displays a selectable button for each year\n */\nAFRAME.registerComponent('year-selector', {\n    schema: {\n        selectedYear: {\n            type: 'string'\n        },\n        selectionColor: {\n            type: 'color',\n            default: '#E5C601'\n        }\n    },\n\n    init() {\n        this.handleHoverStart = this.handleHoverStart.bind(this);\n        this.handleHoverEnd = this.handleHoverEnd.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.createButtons();\n    },\n\n    update(oldData) {\n        if (this.data.selectedYear !== oldData.selectedYear || this.data.selectionColor !== oldData.selectionColor) {\n            YEARS.forEach((year) => {\n                const button = this.buttons[year];\n                if (year === this.data.selectedYear) {\n                    button.setAttribute('material', 'color', this.data.selectionColor);\n                } else {\n                    button.setAttribute('material', 'color', '#FFFFFF');\n                }\n            });\n        }\n        if (this.data.selectedYear !== oldData.selectedYear) {\n            this.el.emit('year-changed', { year: this.data.selectedYear }, true);\n        }\n    },\n\n    remove() {\n        YEARS.forEach((year) => {\n            const button = this.buttons[year];\n            const buttonBorder = button.querySelector('.border');\n            buttonBorder.removeEventListener('hover-start', this.handleHoverStart);\n            buttonBorder.removeEventListener('hover-end', this.handleHoverEnd);\n        });\n    },\n\n    handleStateChange(evt) {\n        if (evt.detail === 'clicked') {\n            YEARS.forEach((year) => {\n                const button = this.buttons[year];\n                if (button === evt.target) {\n                    button.setAttribute('material', 'color', this.data.selectionColor);\n                    this.el.setAttribute('year-selector', 'selectedYear', year);\n                } else {\n                    button.setAttribute('material', 'color', '#FFFFFF');\n                }\n            });\n        }\n    },\n\n    handleHoverStart(evt) {\n        const buttonBorder = evt.target;\n        buttonBorder.setAttribute('material', 'color', this.data.selectionColor);\n        if (evt.detail.hand.components.haptics) {\n            evt.detail.hand.components.haptics.pulse(0.2, 10);\n        }\n    },\n\n    handleHoverEnd(evt) {\n        const buttonBorder = evt.target;\n        buttonBorder.setAttribute('material', 'color', 'black');\n    },\n\n    createButtons() {\n        let xPos = 0;\n        const buttonWidth = 0.5;\n        this.buttons = {};\n        YEARS.forEach((year) => {\n            const button = document.createElement('a-entity');\n            button.setAttribute('geometry', { primitive: 'plane', height: 0.25, width: buttonWidth });\n            button.setAttribute('class', 'selectable');\n            button.setAttribute('clickable', {});\n            button.setAttribute('onclick', 'this.emit(\"grab-start\", {}); this.emit(\"grab-end\", {});');\n            button.addEventListener('stateadded', this.handleStateChange);\n            button.setAttribute('position', `${xPos} 0 0`);\n            button.setAttribute('material', 'shader', 'flat');\n            button.setAttribute('material', 'color', '#FFFFFF');\n            button.setAttribute('text', 'value', year);\n            button.setAttribute('text', 'color', 'black');\n            button.setAttribute('text', 'wrapCount', '4');\n            button.setAttribute('text', 'align', 'center');\n            button.setAttribute('text', 'zOffset', '0.05');\n\n            const buttonBorder = document.createElement('a-plane');\n            buttonBorder.setAttribute('class', 'border');\n            buttonBorder.setAttribute('hoverable', {});\n            buttonBorder.setAttribute('position', '0 0 -0.005');\n            buttonBorder.setAttribute('material', 'shader', 'flat');\n            buttonBorder.setAttribute('material', 'color', 'black');\n            buttonBorder.setAttribute('height', 0.29);\n            buttonBorder.setAttribute('width', buttonWidth + 0.04);\n            buttonBorder.addEventListener('hover-start', this.handleHoverStart);\n            buttonBorder.addEventListener('hover-end', this.handleHoverEnd);\n\n            button.appendChild(buttonBorder);\n\n            this.buttons[year] = button;\n            this.el.appendChild(button);\n            xPos += (buttonWidth + (buttonWidth * 0.1));\n        });\n    }\n});\n","import 'aframe';\nimport { format } from 'd3-format';\n\nconst { AFRAME } = window;\n\nAFRAME.registerComponent('selection-info', {\n    schema: {\n        state: {\n            type: 'string'\n        },\n        candidate: {\n            type: 'string'\n        },\n        party: {\n            type: 'string'\n        },\n        votes: {\n            type: 'number'\n        },\n        totalVotes: {\n            type: 'number'\n        },\n        percentage: {\n            type: 'number'\n        },\n        color: {\n            type: 'color'\n        }\n    },\n\n    init() {\n        this.voteFormatter = format(',');\n        this.totalVoteFormatter = format('.3s');\n        this.percentageFormatter = format('.3p');\n    },\n\n    getInfoText() {\n        return `${this.data.state}\n            ${this.data.candidate} (${this.data.party})\n            ${this.voteFormatter(this.data.votes)} votes\n            ${this.percentageFormatter(this.data.percentage)} of ${this.totalVoteFormatter(this.data.totalVotes)} total`;\n    }\n});\n","import 'aframe';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\n/**\n * Responds to a selection event on part of the map.\n */\nAFRAME.registerComponent('selection-handler', {\n    init() {\n        this.selectionBox = new THREE.Box3Helper(new THREE.Box3(), 'black');\n        this.selectionBox.visible = false;\n        this.el.setObject3D('selectionBox', this.selectionBox);\n\n        this.stateBox = new THREE.Box3();\n        this.infoPanelAnchorPosition = new THREE.Vector3();\n\n        this.infoPanel = document.querySelector('#info-panel');\n        this.infoPanelText = document.querySelector('#info-panel-text');\n        this.infoPanelHighlight = document.querySelector('#info-panel-highlight');\n\n        this.superHands = document.querySelector('[progressive-controls]');\n        this.handleControllerChange = this.handleControllerChange.bind(this);\n        this.superHands.addEventListener('controller-progressed', this.handleControllerChange);\n\n        this.handleSelection = this.handleSelection.bind(this);\n        this.turnSelectionOff = this.turnSelectionOff.bind(this);\n        this.el.sceneEl.addEventListener('year-changed', this.turnSelectionOff);\n    },\n\n    handleControllerChange(evt) {\n        if (evt.detail.level === 'gaze') {\n            this.el.removeEventListener('grab-end', this.handleSelection);\n            this.el.addEventListener('click', this.handleSelection);\n        } else {\n            this.el.removeEventListener('click', this.handleSelection);\n            this.el.addEventListener('grab-end', this.handleSelection);\n        }\n    },\n\n    remove() {\n        this.el.removeEventListener('click', this.handleSelection);\n        this.el.removeEventListener('grab-end', this.handleSelection);\n        this.el.removeEventListener('controller-progressed', this.handleControllerChange);\n        this.el.sceneEl.removeEventListener('year-changed', this.turnSelectionOff);\n    },\n\n    handleSelection(evt) {\n        const targetEl = evt.target;\n        if (this.isAlreadySelected(targetEl)) {\n            this.turnSelectionOff();\n        } else if (this.isSelectable(targetEl)) {\n            this.setSelectionTo(targetEl);\n        }\n    },\n\n    isAlreadySelected(targetEl) {\n        return (targetEl === this.selected);\n    },\n\n    isSelectable(targetEl) {\n        return !!(targetEl.components['selection-info']);\n    },\n\n    setSelectionTo(targetEl) {\n        this.selected = targetEl;\n        const selectedObj = this.selected.getObject3D('mesh');\n        selectedObj.geometry.computeBoundingBox();\n        this.showSelectionBoxFor(selectedObj);\n        this.showInfoPanel(selectedObj);\n    },\n\n    showSelectionBoxFor(selectedObj) {\n        const selectedObjWorldCenter = selectedObj.getWorldPosition();\n        const boxCenter = this.el.object3D.worldToLocal(selectedObjWorldCenter);\n\n        const selectionBox = new THREE.Box3();\n        selectionBox.setFromCenterAndSize(boxCenter, selectedObj.geometry.boundingBox.getSize());\n\n        this.selectionBox.box = selectionBox;\n        this.selectionBox.visible = true;\n    },\n\n    showInfoPanel() {\n        const selectionInfoComp = this.selected.components['selection-info'];\n        this.infoPanelText.setAttribute('value', selectionInfoComp.getInfoText());\n\n        this.calculateInfoPanelAnchorPosition();\n        this.infoPanel.object3D.position.copy(this.infoPanelAnchorPosition);\n\n        this.infoPanelHighlight.setAttribute('color', `#${selectionInfoComp.data.color}`);\n\n        this.infoPanel.object3D.visible = true;\n    },\n\n    calculateInfoPanelAnchorPosition() {\n        this.stateBox.setFromObject(this.selected.parentEl.object3D);\n        this.stateBox.getCenter(this.infoPanelAnchorPosition);\n        this.infoPanelAnchorPosition.setY(this.stateBox.max.y + 0.75);\n    },\n\n    needsPositionUpdate() {\n        return !(this.infoPanel.object3D.position.equals(this.infoPanelAnchorPosition));\n    },\n\n    tick() {\n        if (this.selected && this.needsPositionUpdate()) {\n            this.calculateInfoPanelAnchorPosition();\n            this.infoPanel.object3D.position.copy(this.infoPanelAnchorPosition);\n        }\n    },\n\n    turnSelectionOff() {\n        this.infoPanel.object3D.visible = false;\n        this.selectionBox.visible = false;\n        this.selected = null;\n    }\n});\n","import 'aframe';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\n/**\n * Responds to the pointer hovering over a 'hoverable' part of the map.\n */\nAFRAME.registerComponent('hover-handler', {\n    init() {\n        this.hoverBox = new THREE.Box3Helper(new THREE.Box3(), 'darkgrey');\n        this.hoverBox.visible = false;\n        this.el.setObject3D('hoverBox', this.hoverBox);\n\n        this.handleHoverStart = this.handleHoverStart.bind(this);\n        this.el.addEventListener('hover-start', this.handleHoverStart);\n        this.handleHoverEnd = this.handleHoverEnd.bind(this);\n        this.el.addEventListener('hover-end', this.handleHoverEnd);\n        this.el.sceneEl.addEventListener('year-changed', this.handleHoverEnd);\n    },\n\n    remove() {\n        this.el.removeEventListener('hover-start', this.handleHoverStart);\n        this.el.removeEventListener('hover-end', this.handleHoverEnd);\n        this.el.sceneEl.removeEventListener('year-changed', this.handleHoverEnd);\n    },\n\n    handleHoverStart(evt) {\n        this.selected = evt.target;\n        if (this.selected.components.hoverable) {\n            const selectedObj = this.selected.getObject3D('mesh');\n            const selectedObjWorldCenter = selectedObj.getWorldPosition();\n            const boxCenter = this.el.object3D.worldToLocal(selectedObjWorldCenter);\n\n            selectedObj.geometry.computeBoundingBox();\n            const selectionBox = new THREE.Box3();\n            selectionBox.setFromCenterAndSize(boxCenter, selectedObj.geometry.boundingBox.getSize());\n\n            if (evt.detail.hand.components.haptics) {\n                evt.detail.hand.components.haptics.pulse(0.2, 10);\n            }\n            this.hoverBox.box = selectionBox;\n            this.hoverBox.visible = true;\n        }\n    },\n\n    handleHoverEnd() {\n        this.hoverBox.visible = false;\n        this.selected = null;\n    }\n});\n","import * as constants from './constants';\n\nconst candidateInfo = {\n    'Trump, Donald J.': {\n        firstName: 'Donald J.',\n        lastName: 'Trump',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Clinton, Hillary': {\n        firstName: 'Hillary',\n        lastName: 'Clinton',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Johnson, Gary': {\n        firstName: 'Gary',\n        lastName: 'Johnson',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    },\n    'Stein, Jill': {\n        firstName: 'Jill',\n        lastName: 'Stein',\n        party: 'GRE',\n        color: constants.GREEN_PARTY_GREEN\n    },\n    'McMullin, Evan': {\n        firstName: 'Evan',\n        lastName: 'McMullin',\n        party: 'IND',\n        color: constants.INDEPENDENT_PURPLE\n    },\n    'Obama, Barack': {\n        firstName: 'Barak',\n        lastName: 'Obama',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Romney, Mitt': {\n        firstName: 'Mitt',\n        lastName: 'Romney',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'McCain, John': {\n        firstName: 'John',\n        lastName: 'McCain',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Nader, Ralph': {\n        firstName: 'Ralph',\n        lastName: 'Nader',\n        party: 'IND',\n        color: constants.INDEPENDENT_PURPLE\n    },\n    'Barr, Bob': {\n        firstName: 'Bob',\n        lastName: 'Barr',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    },\n    'Bush, George W.': {\n        firstName: 'George W.',\n        lastName: 'Bush',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Kerry, John F.': {\n        firstName: 'John F.',\n        lastName: 'Kerry',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Badnarik, Michael': {\n        firstName: 'Michael',\n        lastName: 'Badnarik',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    }\n};\n\nexport default candidateInfo;\n","import 'aframe';\nimport { scaleLinear } from 'd3-scale';\nimport * as constants from './constants';\nimport candidateInfo from './candidate-info';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\nconst invisibleMaterial = new THREE.MeshBasicMaterial({ visible: false });\n\nconst createExtrudedAndScaledGeometry = (height, stateShapes, percentage, zPosition) => {\n    const extrudeSettings = {\n        amount: height,\n        bevelEnabled: false\n    };\n\n    const extrudedFeatureGeometry = new THREE.ExtrudeGeometry(stateShapes, extrudeSettings);\n    extrudedFeatureGeometry.computeBoundingBox();\n    const center = extrudedFeatureGeometry.boundingBox.getCenter();\n    extrudedFeatureGeometry.center();\n    extrudedFeatureGeometry.scale(percentage, percentage, 1);\n    extrudedFeatureGeometry.translate(center.x, center.y, center.z + zPosition);\n    return extrudedFeatureGeometry;\n};\nconst createExtrudedAndScaledGeometryPerShape = (height, stateShapes, percentage, zPosition) => {\n    const extrudeSettings = {\n        amount: height,\n        bevelEnabled: false\n    };\n    const extrudeGeometry = new THREE.Geometry();\n    stateShapes.forEach((stateShape) => {\n        const extrudedFeatureGeometry = new THREE.ExtrudeGeometry(stateShape, extrudeSettings);\n        extrudedFeatureGeometry.computeBoundingBox();\n        const center = extrudedFeatureGeometry.boundingBox.getCenter();\n        extrudedFeatureGeometry.center();\n        extrudedFeatureGeometry.scale(percentage, percentage, 1);\n        extrudedFeatureGeometry.translate(center.x, center.y, center.z + zPosition);\n\n        extrudeGeometry.merge(extrudedFeatureGeometry);\n    });\n    return extrudeGeometry;\n};\n\nconst createSelectionMask = (inputGeometry, name, attributes) => {\n    const selectionMaskGeometry = new THREE.BufferGeometry();\n    selectionMaskGeometry.fromGeometry(inputGeometry);\n    selectionMaskGeometry.computeBoundingBox();\n    const center = selectionMaskGeometry.boundingBox.getCenter();\n    selectionMaskGeometry.translate(-center.x, -center.y, -center.z);\n\n    const mesh = new THREE.Mesh(selectionMaskGeometry, invisibleMaterial);\n    mesh.name = name;\n    const selectionMaskEntity = document.createElement('a-entity');\n    selectionMaskEntity.setAttribute('id', name);\n    selectionMaskEntity.setAttribute('position', center);\n    selectionMaskEntity.setAttribute('class', 'selectable');\n    selectionMaskEntity.setAttribute('selection-info', attributes);\n    selectionMaskEntity.setAttribute('hoverable', '');\n    selectionMaskEntity.setObject3D('mesh', mesh);\n    return selectionMaskEntity;\n};\n\nAFRAME.registerComponent('cartogram-renderer', {\n    dependencies: ['geo-projection'],\n    schema: {\n        maxExtrudeHeight: {\n            default: 1.6\n        }\n    },\n    init() {\n        this.geoProjectionComponent = this.el.components['geo-projection'];\n        this.system = this.el.sceneEl.systems['geo-projection'];\n        this.handleGeoDataReady = this.handleGeoDataReady.bind(this);\n        this.handleElectionDataReady = this.handleElectionDataReady.bind(this);\n        this.el.addEventListener('geo-data-ready', this.handleGeoDataReady);\n        this.el.addEventListener('election-data-loaded', this.handleElectionDataReady);\n    },\n    remove() {\n        this.el.removeEventListener('geo-data-ready', this.handleGeoDataReady);\n        this.el.removeEventListener('election-data-loaded', this.handleElectionDataReady);\n        this.clearMap(true);\n    },\n    update(oldData) {\n        if (this.data.maxExtrudeHeight !== oldData.maxExtrudeHeight) {\n            this.render();\n        }\n    },\n    handleGeoDataReady() {\n        this.render();\n    },\n    handleElectionDataReady(evt) {\n        const electionDataLoadEvent = evt.detail;\n        this.votesByFipsCode = electionDataLoadEvent.votesByFipsCode;\n        this.maxTotalVoters = electionDataLoadEvent.maxTotalVoters;\n        this.render();\n    },\n    isReady() {\n        return !!(this.votesByFipsCode && this.geoProjectionComponent.geoJson);\n    },\n    render() {\n        this.clearMap();\n        if (!this.isReady()) return;\n\n        // Determine the vertical scale for the entire country using the state with the largest number of total voters\n        // as equaling the max extrude height\n        const extrudeScale = scaleLinear()\n            .domain([0, this.maxTotalVoters])\n            .range([0, this.data.maxExtrudeHeight]);\n\n        const candidateMetadata = {};\n\n        this.geoProjectionComponent.geoJson.features.forEach((feature) => {\n            const votingData = this.votesByFipsCode[feature.id];\n            const mapRenderContext = this.system.renderToContext(feature, this.geoProjectionComponent.projection);\n            const stateShapes = mapRenderContext.toShapes();\n\n            let zPosition = 0;\n\n            const stateSelectionEntity = document.createElement('a-entity');\n            stateSelectionEntity.setAttribute('id', `state-${feature.id}`);\n            stateSelectionEntity.setAttribute('class', 'state-selection-mask');\n\n            votingData.forEach((candidateData) => {\n                const percentage = (candidateData.votes / candidateData.totalVoters);\n                const height = extrudeScale(candidateData.votes);\n\n                if (!candidateMetadata[candidateData.name]) {\n                    const info = candidateInfo[candidateData.name];\n                    candidateMetadata[candidateData.name] = {\n                        geometry: new THREE.Geometry(),\n                        ...info\n                    };\n                }\n                const candidateMetadatum = candidateMetadata[candidateData.name];\n                const extrudeGeometry = candidateMetadatum.geometry;\n\n                // Hawaii looks better when rendered per shape\n                let featureGeometry;\n                if (feature.id === '15') {\n                    featureGeometry = createExtrudedAndScaledGeometryPerShape(height, stateShapes, percentage, zPosition);\n                } else {\n                    featureGeometry = createExtrudedAndScaledGeometry(height, stateShapes, percentage, zPosition);\n                }\n                extrudeGeometry.merge(featureGeometry);\n\n                const candidateName = `${candidateMetadatum.firstName} ${candidateMetadatum.lastName}`;\n                const attributes = {\n                    state: feature.properties.name,\n                    candidate: candidateName,\n                    party: candidateMetadatum.party,\n                    votes: candidateData.votes,\n                    percentage,\n                    totalVotes: candidateData.totalVoters,\n                    color: candidateMetadatum.color.getHexString()\n                };\n                const selectionMask = createSelectionMask(featureGeometry, `${feature.id}-${candidateMetadatum.lastName}`, attributes);\n                stateSelectionEntity.appendChild(selectionMask);\n                zPosition += height;\n            });\n            this.el.appendChild(stateSelectionEntity);\n        });\n\n        Object.keys(candidateMetadata).forEach((candidateName) => {\n            const candidateMetadatum = candidateMetadata[candidateName];\n            // Convert the extrude geometry into a buffer geometry for better rendering performance\n            const extrudeBufferGeometry = new THREE.BufferGeometry();\n            extrudeBufferGeometry.fromGeometry(candidateMetadatum.geometry);\n\n            const material = new THREE.MeshLambertMaterial({ color: candidateMetadatum.color });\n            const extrudedMap = new THREE.Mesh(extrudeBufferGeometry, material);\n            this.el.setObject3D(candidateName, extrudedMap);\n        });\n\n        const mapRenderContextForOutline = this.system.renderToContext(this.geoProjectionComponent.geoJson, this.geoProjectionComponent.projection);\n        const stateOutlineGeometry = new THREE.BufferGeometry();\n        const stateOutlineVertices = mapRenderContextForOutline.toVertices();\n        stateOutlineGeometry.addAttribute('position', new THREE.Float32BufferAttribute(stateOutlineVertices, 3));\n        const stateOutlineMaterial = new THREE.LineBasicMaterial({ color: constants.DARK_GRAY });\n        const stateOutlines = new THREE.LineSegments(stateOutlineGeometry, stateOutlineMaterial);\n        this.el.setObject3D('lines', stateOutlines);\n    },\n    clearMap(clearAll = false) {\n        Object.keys(this.el.object3DMap).forEach((key) => {\n            if (clearAll || !['hoverBox', 'selectionBox', 'outlineMap'].includes(key)) {\n                this.el.removeObject3D(key);\n            }\n        });\n        this.el.querySelectorAll('.state-selection-mask').forEach((maskEl) => {\n            this.el.removeChild(maskEl);\n        });\n    }\n});\n","import 'aframe';\nimport maxVoters from './assets/maxvoters.json';\n\nconst { AFRAME } = window;\n\nAFRAME.registerComponent('election-data-loader', {\n    schema: {\n        year: {\n            type: 'string'\n        }\n    },\n\n    init() {\n        this.handleDataLoaded = this.handleDataLoaded.bind(this);\n        this.handleYearChanged = this.handleYearChanged.bind(this);\n        this.el.sceneEl.addEventListener('year-changed', this.handleYearChanged);\n        this.yearText = document.querySelector('#year');\n    },\n\n    remove() {\n        this.el.sceneEl.removeEventListener('year-changed', this.handleYearChanged);\n    },\n\n    update(oldData) {\n        if (this.data.year && this.data.year !== oldData.year) {\n            fetch(`assets/federalelections${this.data.year}.json`)\n                .then(response => response.json())\n                .then(this.handleDataLoaded)\n                .then(() => { this.yearText.setAttribute('value', this.data.year); })\n                .catch((error) => { console.error(error); });\n        }\n    },\n\n    handleYearChanged(evt) {\n        this.el.setAttribute('election-data-loader', 'year', evt.detail.year);\n    },\n\n    handleDataLoaded(votingData) {\n        const votesByFipsCode = votingData.reduce((accum, d) => {\n            if (!accum[d.fips]) {\n                accum[d.fips] = [];\n            }\n            accum[d.fips].push(d);\n            return accum;\n        }, {});\n        const maxTotalVoters = maxVoters.totalVoters;\n        this.el.emit('election-data-loaded', { votesByFipsCode, maxTotalVoters });\n    }\n});\n","import 'aframe';\nimport 'aframe-geo-projection-component';\nimport 'super-hands';\nimport 'aframe-animation-component';\nimport 'aframe-haptics-component';\nimport 'aframe-look-at-component';\nimport './election-data-loader';\nimport './cartogram-renderer';\nimport './hover-handler';\nimport './selection-handler';\nimport './selection-info';\nimport './year-selector';\n"],"sourceRoot":""}