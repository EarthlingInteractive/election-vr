{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/help.js","webpack:///./src/year-selector.js","webpack:///./src/selection-info.js","webpack:///./src/selection-handler.js","webpack:///./src/hover-handler.js","webpack:///./src/candidate-info.js","webpack:///./src/cartogram-renderer.js","webpack:///./src/election-data-loader.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","THREE","AFRAME","DARK_GRAY","Color","REPUBLICAN_RED","DEMOCRAT_BLUE","LIBERTARIAN_GOLD","GREEN_PARTY_GREEN","INDEPENDENT_PURPLE","YEARS","registerComponent","init","this","superHands","document","querySelector","handleControllerChange","addEventListener","hideHelp","el","sceneEl","helpEls","remove","removeEventListener","clearHelpEls","evt","detail","level","setupGazeHelp","target","hand","setupRightPointerHelp","setupLeftPointerHelp","showHelp","createTextPanel","text","textPanel","createElement","setAttribute","primitive","height","controlsEl","clearPointerHelpEls","helpText","utils","device","isMobile","gazeHelp","components","caster","parentEl","appendChild","clearGazeHelpEl","rightPointerHelpEl","right","leftPointerHelpEl","left","_this","keys","forEach","key","_this2","removeChild","_constants","schema","selectedYear","type","selectionColor","default","handleHoverStart","handleHoverEnd","handleStateChange","createButtons","update","oldData","year","button","buttons","emit","buttonBorder","_this3","haptics","pulse","_this4","xPos","width","buttonWidth","_d3Format","state","candidate","party","votes","totalVotes","percentage","color","voteFormatter","format","totalVoteFormatter","percentageFormatter","getInfoText","selectionBox","Box3Helper","Box3","visible","setObject3D","stateBox","infoPanelAnchorPosition","Vector3","infoPanel","infoPanelText","infoPanelHighlight","handleSelection","turnSelectionOff","targetEl","isAlreadySelected","isSelectable","setSelectionTo","selected","selectedObj","getObject3D","geometry","computeBoundingBox","showSelectionBoxFor","showInfoPanel","selectedObjWorldCenter","getWorldPosition","boxCenter","object3D","worldToLocal","setFromCenterAndSize","boundingBox","getSize","box","selectionInfoComp","calculateInfoPanelAnchorPosition","position","copy","setFromObject","getCenter","setY","max","y","needsPositionUpdate","equals","tick","hoverBox","hoverable","constants","candidateInfo","Trump, Donald J.","firstName","lastName","Clinton, Hillary","Johnson, Gary","Stein, Jill","McMullin, Evan","Obama, Barack","Romney, Mitt","McCain, John","Nader, Ralph","Barr, Bob","Bush, George W.","Kerry, John F.","Badnarik, Michael","_d3Scale","_candidateInfo","invisibleMaterial","MeshBasicMaterial","dependencies","maxExtrudeHeight","geoProjectionComponent","system","systems","handleGeoDataReady","handleElectionDataReady","clearMap","render","electionDataLoadEvent","votesByFipsCode","maxTotalVoters","isReady","geoJson","extrudeScale","scaleLinear","domain","range","candidateMetadata","features","feature","votingData","id","stateShapes","renderToContext","projection","toShapes","zPosition","stateSelectionEntity","candidateData","totalVoters","info","_candidateInfo2","_extends","Geometry","candidateMetadatum","extrudeGeometry","featureGeometry","extrudeSettings","amount","bevelEnabled","stateShape","extrudedFeatureGeometry","ExtrudeGeometry","center","scale","translate","x","z","merge","createExtrudedAndScaledGeometryPerShape","createExtrudedAndScaledGeometry","candidateName","attributes","properties","getHexString","selectionMask","inputGeometry","selectionMaskGeometry","BufferGeometry","fromGeometry","mesh","Mesh","selectionMaskEntity","createSelectionMask","extrudeBufferGeometry","material","MeshLambertMaterial","extrudedMap","mapRenderContextForOutline","stateOutlineGeometry","stateOutlineVertices","toVertices","addAttribute","Float32BufferAttribute","stateOutlineMaterial","LineBasicMaterial","stateOutlines","LineSegments","clearAll","arguments","undefined","object3DMap","includes","removeObject3D","querySelectorAll","maskEl","_maxvoters","handleDataLoaded","handleYearChanged","yearText","fetch","then","response","json","catch","error","console","reduce","accum","fips","_maxvoters2"],"mappings":"aACA,SAAAA,EAAAC,GAOA,IANA,IAKAC,EAAAC,EALAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAGAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAIA,IADAe,KAAAhB,GACAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAQA,IAAAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GACAI,cAAA,EACAC,YAAA,EACAC,IAAAL,KAMAX,EAAAiB,EAAA,SAAAb,GACApB,OAAA6B,eAAAT,EAAA,cAAiDc,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAd,GACA,IAAAM,EAAAN,KAAAe,WACA,WAA2B,OAAAf,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAS,EAAAC,GAAsD,OAAAtC,OAAAC,UAAAC,eAAAC,KAAAkC,EAAAC,IAGtDtB,EAAAuB,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAzC,KAAA4C,KAAAH,GACAA,EAAAzC,KAAAX,EACAoD,IAAAI,QACA,QAAAjD,EAAA,EAAgBA,EAAA6C,EAAA3C,OAAuBF,IAAAP,EAAAoD,EAAA7C,IACvC,IAAAU,EAAAqC,EAIAnC,EAAAR,MAAA,OAEAU,+FCzIQoC,EADWJ,OAAXK,OACAD,MAEKE,YAAY,IAAIF,EAAMG,MAAM,SAC5BC,iBAAiB,IAAIJ,EAAMG,MAAM,UACjCE,gBAAgB,IAAIL,EAAMG,MAAM,SAChCG,mBAAmB,IAAIN,EAAMG,MAAM,UACnCI,oBAAoB,IAAIP,EAAMG,MAAM,OACpCK,qBAAqB,IAAIR,EAAMG,MAAM,SAErCM,SAAS,OAAQ,OAAQ,OAAQ,+CCV9CtC,EAAA,OAEQ8B,EAAWL,OAAXK,OAERA,EAAOS,kBAAkB,QACrBC,KAD6B,WAEzBC,KAAKC,WAAaC,SAASC,cAAc,0BACzCH,KAAKI,uBAAyBJ,KAAKI,uBAAuBlB,KAAKc,MAC/DA,KAAKC,WAAWI,iBAAiB,wBAAyBL,KAAKI,wBAC/DJ,KAAKM,SAAWN,KAAKM,SAASpB,KAAKc,MACnCA,KAAKO,GAAGC,QAAQH,iBAAiB,eAAgBL,KAAKM,UACtDN,KAAKS,YAGTC,OAV6B,WAWzBV,KAAKC,WAAWU,oBAAoB,wBAAyBX,KAAKI,wBAClEJ,KAAKO,GAAGC,QAAQG,oBAAoB,eAAgBX,KAAKM,UACzDN,KAAKY,gBAGTR,uBAhB6B,SAgBNS,GACM,SAArBA,EAAIC,OAAOC,MACXf,KAAKgB,cAAcH,EAAII,QACI,UAApBJ,EAAIC,OAAOI,KAClBlB,KAAKmB,sBAAsBN,EAAII,QAE/BjB,KAAKoB,qBAAqBP,EAAII,QAElCjB,KAAKqB,YAGTC,gBA3B6B,SA2BbC,GACZ,IAAMC,EAAYtB,SAASuB,cAAc,YAQzC,OAPAD,EAAUE,aAAa,YAAcC,UAAW,QAASC,OAAQ,SACjEJ,EAAUE,aAAa,WAAY,SAAU,QAC7CF,EAAUE,aAAa,WAAY,QAAS,SAC5CF,EAAUE,aAAa,WAAY,UAAW,QAC9CF,EAAUE,aAAa,OAAQ,QAAS,SAExCF,EAAUE,aAAa,OAAQ,QAASH,GACjCC,GAGXR,cAvC6B,SAuCfa,GACV7B,KAAK8B,sBACL,IAAIC,EAAW,+CACV1C,EAAO2C,MAAMC,OAAOC,aACrBH,GAAY,0CAEhB,IAAMI,EAAWnC,KAAKsB,gBAAgBS,GACtCI,EAAST,aAAa,OAAQ,YAAa,MAC3CS,EAAST,aAAa,WAAY,QAAS,OAC3CS,EAAST,aAAa,OAAQ,QAAS,UACvCS,EAAST,aAAa,WAAY,YACnBG,EAAWO,WAAW,wBAAwBC,OACtDC,SAASC,YAAYJ,GAC5BnC,KAAKS,QAAQ0B,SAAWA,GAG5BhB,sBAvD6B,SAuDPU,GAClB7B,KAAKwC,kBACL,IAEMC,EAAqBzC,KAAKsB,gBAF1BS,mLAGNU,EAAmBf,aAAa,WAAY,QAAS,QACrDe,EAAmBf,aAAa,OAAQ,YAAa,MACrDe,EAAmBf,aAAa,OAAQ,QAAS,QACjDe,EAAmBf,aAAa,WAAY,eAC5Ce,EAAmBf,aAAa,WAAY,WACvBG,EAAWO,WAAW,wBAAwBM,MACtDH,YAAYE,GACzBzC,KAAKS,QAAQgC,mBAAqBA,GAGtCrB,qBAtE6B,SAsERS,GACjB7B,KAAKwC,kBACL,IAEMG,EAAoB3C,KAAKsB,gBAFzBS,wSAGNY,EAAkBjB,aAAa,WAAY,QAAS,QACpDiB,EAAkBjB,aAAa,OAAQ,YAAa,MACpDiB,EAAkBjB,aAAa,OAAQ,QAAS,QAChDiB,EAAkBjB,aAAa,WAAY,gBAC3CiB,EAAkBjB,aAAa,WAAY,WACvBG,EAAWO,WAAW,wBAAwBQ,KACtDL,YAAYI,GACxB3C,KAAKS,QAAQkC,kBAAoBA,GAGrCtB,SArF6B,WAqFlB,IAAAwB,EAAA7C,KACPzD,OAAOuG,KAAK9C,KAAKS,SAASsC,QAAQ,SAACC,GAChBH,EAAKpC,QAAQuC,GACrBtB,aAAa,WAAW,MAIvCpB,SA5F6B,WA4FlB,IAAA2C,EAAAjD,KACPzD,OAAOuG,KAAK9C,KAAKS,SAASsC,QAAQ,SAACC,GAChBC,EAAKxC,QAAQuC,GACrBtB,aAAa,WAAW,MAIvCc,gBAnG6B,WAoGrBxC,KAAKS,QAAQ0B,WACbnC,KAAKS,QAAQ0B,SAASG,SAASY,YAAYlD,KAAKS,QAAQ0B,iBACjDnC,KAAKS,QAAQ0B,WAI5BL,oBA1G6B,WA2GrB9B,KAAKS,QAAQgC,qBACbzC,KAAKS,QAAQgC,mBAAmBH,SAASY,YAAYlD,KAAKS,QAAQgC,2BAC3DzC,KAAKS,QAAQgC,oBAEpBzC,KAAKS,QAAQkC,oBACb3C,KAAKS,QAAQkC,kBAAkBL,SAASY,YAAYlD,KAAKS,QAAQkC,0BAC1D3C,KAAKS,QAAQkC,oBAI5B/B,aArH6B,WAsHzBZ,KAAKwC,kBACLxC,KAAK8B,uDC3HbvE,EAAA,GACA,IAAA4F,EAAA5F,EAAA,GAEmByB,OAAXK,OAKDS,kBAAkB,iBACrBsD,QACIC,cACIC,KAAM,UAEVC,gBACID,KAAM,QACNE,QAAS,YAIjBzD,KAXsC,WAYlCC,KAAKyD,iBAAmBzD,KAAKyD,iBAAiBvE,KAAKc,MACnDA,KAAK0D,eAAiB1D,KAAK0D,eAAexE,KAAKc,MAC/CA,KAAK2D,kBAAoB3D,KAAK2D,kBAAkBzE,KAAKc,MACrDA,KAAK4D,iBAGTC,OAlBsC,SAkB/BC,GAAS,IAAAjB,EAAA7C,KACRA,KAAKpE,KAAKyH,eAAiBS,EAAQT,cAAgBrD,KAAKpE,KAAK2H,iBAAmBO,EAAQP,gBACxFJ,EAAAtD,MAAMkD,QAAQ,SAACgB,GACX,IAAMC,EAASnB,EAAKoB,QAAQF,GACxBA,IAASlB,EAAKjH,KAAKyH,aACnBW,EAAOtC,aAAa,WAAY,QAASmB,EAAKjH,KAAK2H,gBAEnDS,EAAOtC,aAAa,WAAY,QAAS,aAIjD1B,KAAKpE,KAAKyH,eAAiBS,EAAQT,cACnCrD,KAAKO,GAAG2D,KAAK,gBAAkBH,KAAM/D,KAAKpE,KAAKyH,eAAgB,IAIvE3C,OAlCsC,WAkC7B,IAAAuC,EAAAjD,KACLmD,EAAAtD,MAAMkD,QAAQ,SAACgB,GACX,IACMI,EADSlB,EAAKgB,QAAQF,GACA5D,cAAc,WAC1CgE,EAAaxD,oBAAoB,cAAesC,EAAKQ,kBACrDU,EAAaxD,oBAAoB,YAAasC,EAAKS,mBAI3DC,kBA3CsC,SA2CpB9C,GAAK,IAAAuD,EAAApE,KACA,YAAfa,EAAIC,QACJqC,EAAAtD,MAAMkD,QAAQ,SAACgB,GACX,IAAMC,EAASI,EAAKH,QAAQF,GACxBC,IAAWnD,EAAII,QACf+C,EAAOtC,aAAa,WAAY,QAAS0C,EAAKxI,KAAK2H,gBACnDa,EAAK7D,GAAGmB,aAAa,gBAAiB,eAAgBqC,IAEtDC,EAAOtC,aAAa,WAAY,QAAS,cAMzD+B,iBAzDsC,SAyDrB5C,GACQA,EAAII,OACZS,aAAa,WAAY,QAAS1B,KAAKpE,KAAK2H,gBACrD1C,EAAIC,OAAOI,KAAKkB,WAAWiC,SAC3BxD,EAAIC,OAAOI,KAAKkB,WAAWiC,QAAQC,MAAM,GAAK,KAItDZ,eAjEsC,SAiEvB7C,GACUA,EAAII,OACZS,aAAa,WAAY,QAAS,UAGnDkC,cAtEsC,WAsEtB,IAAAW,EAAAvE,KACRwE,EAAO,EAEXxE,KAAKiE,WACLd,EAAAtD,MAAMkD,QAAQ,SAACgB,GACX,IAAMC,EAAS9D,SAASuB,cAAc,YACtCuC,EAAOtC,aAAa,YAAcC,UAAW,QAASC,OAAQ,IAAM6C,MAJpD,KAKhBT,EAAOtC,aAAa,QAAS,cAC7BsC,EAAOtC,aAAa,gBACpBsC,EAAOtC,aAAa,UAAW,2DAC/BsC,EAAO3D,iBAAiB,aAAckE,EAAKZ,mBAC3CK,EAAOtC,aAAa,WAAe8C,EAAnC,QACAR,EAAOtC,aAAa,WAAY,SAAU,QAC1CsC,EAAOtC,aAAa,WAAY,QAAS,WACzCsC,EAAOtC,aAAa,OAAQ,QAASqC,GACrCC,EAAOtC,aAAa,OAAQ,QAAS,SACrCsC,EAAOtC,aAAa,OAAQ,YAAa,KACzCsC,EAAOtC,aAAa,OAAQ,QAAS,UACrCsC,EAAOtC,aAAa,OAAQ,UAAW,QAEvC,IAAMyC,EAAejE,SAASuB,cAAc,WAC5C0C,EAAazC,aAAa,QAAS,UACnCyC,EAAazC,aAAa,gBAC1ByC,EAAazC,aAAa,WAAY,cACtCyC,EAAazC,aAAa,WAAY,SAAU,QAChDyC,EAAazC,aAAa,WAAY,QAAS,SAC/CyC,EAAazC,aAAa,SAAU,KACpCyC,EAAazC,aAAa,QAASgD,KACnCP,EAAa9D,iBAAiB,cAAekE,EAAKd,kBAClDU,EAAa9D,iBAAiB,YAAakE,EAAKb,gBAEhDM,EAAOzB,YAAY4B,GAEnBI,EAAKN,QAAQF,GAAQC,EACrBO,EAAKhE,GAAGgC,YAAYyB,GACpBQ,GAASE,uCCjHrBnH,EAAA,GACA,IAAAoH,EAAApH,EAAA,GAEmByB,OAAXK,OAEDS,kBAAkB,kBACrBsD,QACIwB,OACItB,KAAM,UAEVuB,WACIvB,KAAM,UAEVwB,OACIxB,KAAM,UAEVyB,OACIzB,KAAM,UAEV0B,YACI1B,KAAM,UAEV2B,YACI3B,KAAM,UAEV4B,OACI5B,KAAM,UAIdvD,KAzBuC,WA0BnCC,KAAKmF,eAAgB,EAAAR,EAAAS,QAAO,KAC5BpF,KAAKqF,oBAAqB,EAAAV,EAAAS,QAAO,OACjCpF,KAAKsF,qBAAsB,EAAAX,EAAAS,QAAO,QAGtCG,YA/BuC,WAgCnC,OAAUvF,KAAKpE,KAAKgJ,MAApB,iBACM5E,KAAKpE,KAAKiJ,UADhB,KAC8B7E,KAAKpE,KAAKkJ,MADxC,kBAEM9E,KAAKmF,cAAcnF,KAAKpE,KAAKmJ,OAFnC,uBAGM/E,KAAKsF,oBAAoBtF,KAAKpE,KAAKqJ,YAHzC,OAG2DjF,KAAKqF,mBAAmBrF,KAAKpE,KAAKoJ,YAH7F,0CCrCRzH,EAAA,OAEQ8B,EAAWL,OAAXK,OACAD,EAAUC,EAAVD,MAKRC,EAAOS,kBAAkB,qBACrBC,KAD0C,WAEtCC,KAAKwF,aAAe,IAAIpG,EAAMqG,WAAW,IAAIrG,EAAMsG,KAAQ,SAC3D1F,KAAKwF,aAAaG,SAAU,EAC5B3F,KAAKO,GAAGqF,YAAY,eAAgB5F,KAAKwF,cAEzCxF,KAAK6F,SAAW,IAAIzG,EAAMsG,KAC1B1F,KAAK8F,wBAA0B,IAAI1G,EAAM2G,QAEzC/F,KAAKgG,UAAY9F,SAASC,cAAc,eACxCH,KAAKiG,cAAgB/F,SAASC,cAAc,oBAC5CH,KAAKkG,mBAAqBhG,SAASC,cAAc,yBAEjDH,KAAKC,WAAaC,SAASC,cAAc,0BACzCH,KAAKI,uBAAyBJ,KAAKI,uBAAuBlB,KAAKc,MAC/DA,KAAKC,WAAWI,iBAAiB,wBAAyBL,KAAKI,wBAE/DJ,KAAKmG,gBAAkBnG,KAAKmG,gBAAgBjH,KAAKc,MACjDA,KAAKoG,iBAAmBpG,KAAKoG,iBAAiBlH,KAAKc,MACnDA,KAAKO,GAAGC,QAAQH,iBAAiB,eAAgBL,KAAKoG,mBAG1DhG,uBAtB0C,SAsBnBS,GACM,SAArBA,EAAIC,OAAOC,OACXf,KAAKO,GAAGI,oBAAoB,WAAYX,KAAKmG,iBAC7CnG,KAAKO,GAAGF,iBAAiB,QAASL,KAAKmG,mBAEvCnG,KAAKO,GAAGI,oBAAoB,QAASX,KAAKmG,iBAC1CnG,KAAKO,GAAGF,iBAAiB,WAAYL,KAAKmG,mBAIlDzF,OAhC0C,WAiCtCV,KAAKO,GAAGI,oBAAoB,QAASX,KAAKmG,iBAC1CnG,KAAKO,GAAGI,oBAAoB,WAAYX,KAAKmG,iBAC7CnG,KAAKC,WAAWU,oBAAoB,wBAAyBX,KAAKI,wBAClEJ,KAAKO,GAAGC,QAAQG,oBAAoB,eAAgBX,KAAKoG,mBAG7DD,gBAvC0C,SAuC1BtF,GACZ,IAAMwF,EAAWxF,EAAII,OACjBjB,KAAKsG,kBAAkBD,GACvBrG,KAAKoG,mBACEpG,KAAKuG,aAAaF,IACzBrG,KAAKwG,eAAeH,IAI5BC,kBAhD0C,SAgDxBD,GACd,OAAQA,IAAarG,KAAKyG,UAG9BF,aApD0C,SAoD7BF,GACT,QAAUA,EAASjE,WAAW,mBAGlCoE,eAxD0C,SAwD3BH,GACXrG,KAAKyG,SAAWJ,EAChB,IAAMK,EAAc1G,KAAKyG,SAASE,YAAY,QAC9CD,EAAYE,SAASC,qBACrB7G,KAAK8G,oBAAoBJ,GACzB1G,KAAK+G,cAAcL,IAGvBI,oBAhE0C,SAgEtBJ,GAChB,IAAMM,EAAyBN,EAAYO,mBACrCC,EAAYlH,KAAKO,GAAG4G,SAASC,aAAaJ,GAE1CxB,EAAe,IAAIpG,EAAMsG,KAC/BF,EAAa6B,qBAAqBH,EAAWR,EAAYE,SAASU,YAAYC,WAE9EvH,KAAKwF,aAAagC,IAAMhC,EACxBxF,KAAKwF,aAAaG,SAAU,GAGhCoB,cA3E0C,WA4EtC,IAAMU,EAAoBzH,KAAKyG,SAASrE,WAAW,kBACnDpC,KAAKiG,cAAcvE,aAAa,QAAS+F,EAAkBlC,eAE3DvF,KAAK0H,mCACL1H,KAAKgG,UAAUmB,SAASQ,SAASC,KAAK5H,KAAK8F,yBAE3C9F,KAAKkG,mBAAmBxE,aAAa,QAArC,IAAkD+F,EAAkB7L,KAAKsJ,OAEzElF,KAAKgG,UAAUmB,SAASxB,SAAU,GAGtC+B,iCAvF0C,WAwFtC1H,KAAK6F,SAASgC,cAAc7H,KAAKyG,SAASnE,SAAS6E,UACnDnH,KAAK6F,SAASiC,UAAU9H,KAAK8F,yBAC7B9F,KAAK8F,wBAAwBiC,KAAK/H,KAAK6F,SAASmC,IAAIC,EAAI,MAG5DC,oBA7F0C,WA8FtC,OAASlI,KAAKgG,UAAUmB,SAASQ,SAASQ,OAAOnI,KAAK8F,0BAG1DsC,KAjG0C,WAkGlCpI,KAAKyG,WACLzG,KAAK0H,mCACD1H,KAAKkI,uBACLlI,KAAKgG,UAAUmB,SAASQ,SAASC,KAAK5H,KAAK8F,2BAKvDM,iBA1G0C,WA2GtCpG,KAAKgG,UAAUmB,SAASxB,SAAU,EAClC3F,KAAKwF,aAAaG,SAAU,EAC5B3F,KAAKyG,SAAW,sCCrHxBlJ,EAAA,OAEQ8B,EAAWL,OAAXK,OACAD,EAAUC,EAAVD,MAKRC,EAAOS,kBAAkB,iBACrBC,KADsC,WAElCC,KAAKqI,SAAW,IAAIjJ,EAAMqG,WAAW,IAAIrG,EAAMsG,KAAQ,YACvD1F,KAAKqI,SAAS1C,SAAU,EACxB3F,KAAKO,GAAGqF,YAAY,WAAY5F,KAAKqI,UAErCrI,KAAKyD,iBAAmBzD,KAAKyD,iBAAiBvE,KAAKc,MACnDA,KAAKO,GAAGF,iBAAiB,cAAeL,KAAKyD,kBAC7CzD,KAAK0D,eAAiB1D,KAAK0D,eAAexE,KAAKc,MAC/CA,KAAKO,GAAGF,iBAAiB,YAAaL,KAAK0D,gBAC3C1D,KAAKO,GAAGC,QAAQH,iBAAiB,eAAgBL,KAAK0D,iBAG1DhD,OAbsC,WAclCV,KAAKO,GAAGI,oBAAoB,cAAeX,KAAKyD,kBAChDzD,KAAKO,GAAGI,oBAAoB,YAAaX,KAAK0D,gBAC9C1D,KAAKO,GAAGC,QAAQG,oBAAoB,eAAgBX,KAAK0D,iBAG7DD,iBAnBsC,SAmBrB5C,GAEb,GADAb,KAAKyG,SAAW5F,EAAII,OAChBjB,KAAKyG,SAASrE,WAAWkG,UAAW,CACpC,IAAM5B,EAAc1G,KAAKyG,SAASE,YAAY,QACxCK,EAAyBN,EAAYO,mBACrCC,EAAYlH,KAAKO,GAAG4G,SAASC,aAAaJ,GAEhDN,EAAYE,SAASC,qBACrB,IAAMrB,EAAe,IAAIpG,EAAMsG,KAC/BF,EAAa6B,qBAAqBH,EAAWR,EAAYE,SAASU,YAAYC,WAE1E1G,EAAIC,OAAOI,KAAKkB,WAAWiC,SAC3BxD,EAAIC,OAAOI,KAAKkB,WAAWiC,QAAQC,MAAM,GAAK,IAElDtE,KAAKqI,SAASb,IAAMhC,EACpBxF,KAAKqI,SAAS1C,SAAU,IAIhCjC,eAtCsC,WAuClC1D,KAAKqI,SAAS1C,SAAU,EACxB3F,KAAKyG,SAAW,uFChDxB,IAAY8B,0JAAZhL,EAAA,IAEA,IAAMiL,GACFC,oBACIC,UAAW,YACXC,SAAU,QACV7D,MAAO,IACPI,MAAOqD,EAAU/I,gBAErBoJ,oBACIF,UAAW,UACXC,SAAU,UACV7D,MAAO,IACPI,MAAOqD,EAAU9I,eAErBoJ,iBACIH,UAAW,OACXC,SAAU,UACV7D,MAAO,MACPI,MAAOqD,EAAU7I,kBAErBoJ,eACIJ,UAAW,OACXC,SAAU,QACV7D,MAAO,MACPI,MAAOqD,EAAU5I,mBAErBoJ,kBACIL,UAAW,OACXC,SAAU,WACV7D,MAAO,MACPI,MAAOqD,EAAU3I,oBAErBoJ,iBACIN,UAAW,QACXC,SAAU,QACV7D,MAAO,IACPI,MAAOqD,EAAU9I,eAErBwJ,gBACIP,UAAW,OACXC,SAAU,SACV7D,MAAO,IACPI,MAAOqD,EAAU/I,gBAErB0J,gBACIR,UAAW,OACXC,SAAU,SACV7D,MAAO,IACPI,MAAOqD,EAAU/I,gBAErB2J,gBACIT,UAAW,QACXC,SAAU,QACV7D,MAAO,MACPI,MAAOqD,EAAU3I,oBAErBwJ,aACIV,UAAW,MACXC,SAAU,OACV7D,MAAO,MACPI,MAAOqD,EAAU7I,kBAErB2J,mBACIX,UAAW,YACXC,SAAU,OACV7D,MAAO,IACPI,MAAOqD,EAAU/I,gBAErB8J,kBACIZ,UAAW,UACXC,SAAU,QACV7D,MAAO,IACPI,MAAOqD,EAAU9I,eAErB8J,qBACIb,UAAW,UACXC,SAAU,WACV7D,MAAO,MACPI,MAAOqD,EAAU7I,6BAIV8I,wMCnFfjL,EAAA,GACA,MAAAiM,EAAAjM,EAAA,GACYgL,0JAAZhL,EAAA,IACAkM,EAAAlM,EAAA,4CAEQ8B,EAAWL,OAAXK,OACAD,EAAUC,EAAVD,MAEFsK,EAAoB,IAAItK,EAAMuK,mBAAoBhE,SAAS,IAsDjEtG,EAAOS,kBAAkB,sBACrB8J,cAAe,kBACfxG,QACIyG,kBACIrG,QAAS,MAGjBzD,KAP2C,WAQvCC,KAAK8J,uBAAyB9J,KAAKO,GAAG6B,WAAW,kBACjDpC,KAAK+J,OAAS/J,KAAKO,GAAGC,QAAQwJ,QAAQ,kBACtChK,KAAKiK,mBAAqBjK,KAAKiK,mBAAmB/K,KAAKc,MACvDA,KAAKkK,wBAA0BlK,KAAKkK,wBAAwBhL,KAAKc,MACjEA,KAAKO,GAAGF,iBAAiB,iBAAkBL,KAAKiK,oBAChDjK,KAAKO,GAAGF,iBAAiB,uBAAwBL,KAAKkK,0BAE1DxJ,OAf2C,WAgBvCV,KAAKO,GAAGI,oBAAoB,iBAAkBX,KAAKiK,oBACnDjK,KAAKO,GAAGI,oBAAoB,uBAAwBX,KAAKkK,yBACzDlK,KAAKmK,UAAS,IAElBtG,OApB2C,SAoBpCC,GACC9D,KAAKpE,KAAKiO,mBAAqB/F,EAAQ+F,kBACvC7J,KAAKoK,UAGbH,mBAzB2C,WA0BvCjK,KAAKoK,UAETF,wBA5B2C,SA4BnBrJ,GACpB,IAAMwJ,EAAwBxJ,EAAIC,OAClCd,KAAKsK,gBAAkBD,EAAsBC,gBAC7CtK,KAAKuK,eAAiBF,EAAsBE,eAC5CvK,KAAKoK,UAETI,QAlC2C,WAmCvC,SAAUxK,KAAKsK,kBAAmBtK,KAAK8J,uBAAuBW,UAElEL,OArC2C,WAqClC,IAAAvH,EAAA7C,KAEL,GADAA,KAAKmK,WACAnK,KAAKwK,UAAV,CAIA,IAAME,GAAe,EAAAlB,EAAAmB,eAChBC,QAAQ,EAAG5K,KAAKuK,iBAChBM,OAAO,EAAG7K,KAAKpE,KAAKiO,mBAEnBiB,KAEN9K,KAAK8J,uBAAuBW,QAAQM,SAAShI,QAAQ,SAACiI,GAClD,IAAMC,EAAapI,EAAKyH,gBAAgBU,EAAQE,IAE1CC,EADmBtI,EAAKkH,OAAOqB,gBAAgBJ,EAASnI,EAAKiH,uBAAuBuB,YACrDC,WAEjCC,EAAY,EAEVC,EAAuBtL,SAASuB,cAAc,YACpD+J,EAAqB9J,aAAa,KAAlC,SAAiDsJ,EAAQE,IACzDM,EAAqB9J,aAAa,QAAS,wBAE3CuJ,EAAWlI,QAAQ,SAAC0I,GAChB,IAAMxG,EAAcwG,EAAc1G,MAAQ0G,EAAcC,YAClD9J,EAAS8I,EAAae,EAAc1G,OAE1C,IAAK+F,EAAkBW,EAAcxN,MAAO,CACxC,IAAM0N,EAAOC,EAAApI,QAAciI,EAAcxN,MACzC6M,EAAkBW,EAAcxN,MAAhC4N,GACIjF,SAAU,IAAIxH,EAAM0M,UACjBH,GAGX,IAAMI,EAAqBjB,EAAkBW,EAAcxN,MACrD+N,EAAkBD,EAAmBnF,SAGvCqF,SAEAA,EADe,OAAfjB,EAAQE,IAA8B,OAAfF,EAAQE,GAlHH,SAACtJ,EAAQuJ,EAAalG,EAAYsG,GAC9E,IAAMW,GACFC,OAAQvK,EACRwK,cAAc,GAEZJ,EAAkB,IAAI5M,EAAM0M,SAWlC,OAVAX,EAAYpI,QAAQ,SAACsJ,GACjB,IAAMC,EAA0B,IAAIlN,EAAMmN,gBAAgBF,EAAYH,GACtEI,EAAwBzF,qBACxB,IAAM2F,EAASF,EAAwBhF,YAAYQ,YACnDwE,EAAwBE,SACxBF,EAAwBG,MAAMxH,EAAYA,EAAY,GACtDqH,EAAwBI,UAAUF,EAAOG,EAAGH,EAAOvE,EAAGuE,EAAOI,EAAIrB,GAEjES,EAAgBa,MAAMP,KAEnBN,EAmG2Bc,CAAwClL,EAAQuJ,EAAalG,EAAYsG,GAjIvE,SAAC3J,EAAQuJ,EAAalG,EAAYsG,GACtE,IAAMW,GACFC,OAAQvK,EACRwK,cAAc,GAGZE,EAA0B,IAAIlN,EAAMmN,gBAAgBpB,EAAae,GACvEI,EAAwBzF,qBACxB,IAAM2F,EAASF,EAAwBhF,YAAYQ,YAInD,OAHAwE,EAAwBE,SACxBF,EAAwBG,MAAMxH,EAAYA,EAAY,GACtDqH,EAAwBI,UAAUF,EAAOG,EAAGH,EAAOvE,EAAGuE,EAAOI,EAAIrB,GAC1De,EAuH2BS,CAAgCnL,EAAQuJ,EAAalG,EAAYsG,GAEvFS,EAAgBa,MAAMZ,GAEtB,IAAMe,EAAmBjB,EAAmBrD,UAAtC,IAAmDqD,EAAmBpD,SACtEsE,GACFrI,MAAOoG,EAAQkC,WAAWjP,KAC1B4G,UAAWmI,EACXlI,MAAOiH,EAAmBjH,MAC1BC,MAAO0G,EAAc1G,MACrBE,aACAD,WAAYyG,EAAcC,YAC1BxG,MAAO6G,EAAmB7G,MAAMiI,gBAE9BC,EAhHM,SAACC,EAAepP,EAAMgP,GAC9C,IAAMK,EAAwB,IAAIlO,EAAMmO,eACxCD,EAAsBE,aAAaH,GACnCC,EAAsBzG,qBACtB,IAAM2F,EAASc,EAAsBhG,YAAYQ,YACjDwF,EAAsBZ,WAAWF,EAAOG,GAAIH,EAAOvE,GAAIuE,EAAOI,GAE9D,IAAMa,EAAO,IAAIrO,EAAMsO,KAAKJ,EAAuB5D,GACnD+D,EAAKxP,KAAOA,EACZ,IAAM0P,EAAsBzN,SAASuB,cAAc,YAOnD,OANAkM,EAAoBjM,aAAa,KAAMzD,GACvC0P,EAAoBjM,aAAa,WAAY8K,GAC7CmB,EAAoBjM,aAAa,QAAS,cAC1CiM,EAAoBjM,aAAa,iBAAkBuL,GACnDU,EAAoBjM,aAAa,YAAa,IAC9CiM,EAAoB/H,YAAY,OAAQ6H,GACjCE,EAgG2BC,CAAoB3B,EAAoBjB,EAAQE,GAAhD,IAAsDa,EAAmBpD,SAAYsE,GAC3GzB,EAAqBjJ,YAAY6K,GACjC7B,GAAa3J,IAEjBiB,EAAKtC,GAAGgC,YAAYiJ,KAGxBjP,OAAOuG,KAAKgI,GAAmB/H,QAAQ,SAACiK,GACpC,IAAMjB,EAAqBjB,EAAkBkC,GAEvCa,EAAwB,IAAIzO,EAAMmO,eACxCM,EAAsBL,aAAazB,EAAmBnF,UAEtD,IAAMkH,EAAW,IAAI1O,EAAM2O,qBAAsB7I,MAAO6G,EAAmB7G,QACrE8I,EAAc,IAAI5O,EAAMsO,KAAKG,EAAuBC,GAC1DjL,EAAKtC,GAAGqF,YAAYoH,EAAegB,KAGvC,IAAMC,EAA6BjO,KAAK+J,OAAOqB,gBAAgBpL,KAAK8J,uBAAuBW,QAASzK,KAAK8J,uBAAuBuB,YAC1H6C,EAAuB,IAAI9O,EAAMmO,eACjCY,EAAuBF,EAA2BG,aACxDF,EAAqBG,aAAa,WAAY,IAAIjP,EAAMkP,uBAAuBH,EAAsB,IACrG,IAAMI,EAAuB,IAAInP,EAAMoP,mBAAoBtJ,MAAOqD,EAAUjJ,YACtEmP,EAAgB,IAAIrP,EAAMsP,aAAaR,EAAsBK,GACnEvO,KAAKO,GAAGqF,YAAY,QAAS6I,KAEjCtE,SAvH2C,WAuHhB,IAAAlH,EAAAjD,KAAlB2O,EAAkBC,UAAAxS,OAAA,QAAAyS,IAAAD,UAAA,IAAAA,UAAA,GACvBrS,OAAOuG,KAAK9C,KAAKO,GAAGuO,aAAa/L,QAAQ,SAACC,IAClC2L,IAAc,WAAY,eAAgB,cAAcI,SAAS/L,IACjEC,EAAK1C,GAAGyO,eAAehM,KAG/BhD,KAAKO,GAAG0O,iBAAiB,yBAAyBlM,QAAQ,SAACmM,GACvDjM,EAAK1C,GAAG2C,YAAYgM,+FC5LhC3R,EAAA,GACA,MAAA4R,EAAA5R,EAAA,wCAEmByB,OAAXK,OAEDS,kBAAkB,wBACrBsD,QACIW,MACIT,KAAM,WAIdvD,KAP6C,WAQzCC,KAAKoP,iBAAmBpP,KAAKoP,iBAAiBlQ,KAAKc,MACnDA,KAAKqP,kBAAoBrP,KAAKqP,kBAAkBnQ,KAAKc,MACrDA,KAAKO,GAAGC,QAAQH,iBAAiB,eAAgBL,KAAKqP,mBACtDrP,KAAKsP,SAAWpP,SAASC,cAAc,UAG3CO,OAd6C,WAezCV,KAAKO,GAAGC,QAAQG,oBAAoB,eAAgBX,KAAKqP,oBAG7DxL,OAlB6C,SAkBtCC,GAAS,IAAAjB,EAAA7C,KACRA,KAAKpE,KAAKmI,MAAQ/D,KAAKpE,KAAKmI,OAASD,EAAQC,MAC7CwL,gCAAgCvP,KAAKpE,KAAKmI,KAA1C,SACKyL,KAAK,SAAAC,GAAA,OAAYA,EAASC,SAC1BF,KAAKxP,KAAKoP,kBACVI,KAAK,WAAQ3M,EAAKyM,SAAS5N,aAAa,QAASmB,EAAKjH,KAAKmI,QAC3D4L,MAAM,SAACC,GAAYC,QAAQD,MAAMA,MAI9CP,kBA5B6C,SA4B3BxO,GACdb,KAAKO,GAAGmB,aAAa,uBAAwB,OAAQb,EAAIC,OAAOiD,OAGpEqL,iBAhC6C,SAgC5BnE,GACb,IAAMX,EAAkBW,EAAW6E,OAAO,SAACC,EAAO/R,GAK9C,OAJK+R,EAAM/R,EAAEgS,QACTD,EAAM/R,EAAEgS,UAEZD,EAAM/R,EAAEgS,MAAM1T,KAAK0B,GACZ+R,OAELxF,EAAiB0F,EAAAzM,QAAUkI,YACjC1L,KAAKO,GAAG2D,KAAK,wBAA0BoG,kBAAiBC,oDC9ChEhN,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([27,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const { AFRAME } = window;\nconst { THREE } = AFRAME;\n\nexport const DARK_GRAY = new THREE.Color(0x56565a);\nexport const REPUBLICAN_RED = new THREE.Color(0xE91D0E);\nexport const DEMOCRAT_BLUE = new THREE.Color(0x232066);\nexport const LIBERTARIAN_GOLD = new THREE.Color(0xE5C601);\nexport const GREEN_PARTY_GREEN = new THREE.Color(0x00A95C);\nexport const INDEPENDENT_PURPLE = new THREE.Color(0x9400D3);\n\nexport const YEARS = ['2016', '2012', '2008', '2004'];\n","import 'aframe';\n\nconst { AFRAME } = window;\n\nAFRAME.registerComponent('help', {\n    init() {\n        this.superHands = document.querySelector('[progressive-controls]');\n        this.handleControllerChange = this.handleControllerChange.bind(this);\n        this.superHands.addEventListener('controller-progressed', this.handleControllerChange);\n        this.hideHelp = this.hideHelp.bind(this);\n        this.el.sceneEl.addEventListener('year-changed', this.hideHelp);\n        this.helpEls = {};\n    },\n\n    remove() {\n        this.superHands.removeEventListener('controller-progressed', this.handleControllerChange);\n        this.el.sceneEl.removeEventListener('year-changed', this.hideHelp);\n        this.clearHelpEls();\n    },\n\n    handleControllerChange(evt) {\n        if (evt.detail.level === 'gaze') {\n            this.setupGazeHelp(evt.target);\n        } else if (evt.detail.hand === 'right') {\n            this.setupRightPointerHelp(evt.target);\n        } else {\n            this.setupLeftPointerHelp(evt.target);\n        }\n        this.showHelp();\n    },\n\n    createTextPanel(text) {\n        const textPanel = document.createElement('a-entity');\n        textPanel.setAttribute('geometry', { primitive: 'plane', height: 'auto' });\n        textPanel.setAttribute('material', 'shader', 'flat');\n        textPanel.setAttribute('material', 'color', 'white');\n        textPanel.setAttribute('material', 'opacity', '0.75');\n        textPanel.setAttribute('text', 'color', 'black');\n        // textPanel.setAttribute('text', 'zOffset', '0.01');\n        textPanel.setAttribute('text', 'value', text);\n        return textPanel;\n    },\n\n    setupGazeHelp(controlsEl) {\n        this.clearPointerHelpEls();\n        let helpText = 'Gaze at something for 1 second to select it.';\n        if (!AFRAME.utils.device.isMobile()) {\n            helpText += '\\nUse the w-a-s-d keys to move around.';\n        }\n        const gazeHelp = this.createTextPanel(helpText);\n        gazeHelp.setAttribute('text', 'wrapCount', '15');\n        gazeHelp.setAttribute('geometry', 'width', '0.5');\n        gazeHelp.setAttribute('text', 'align', 'center');\n        gazeHelp.setAttribute('position', '0.3 0 -2');\n        const gazeEl = controlsEl.components['progressive-controls'].caster;\n        gazeEl.parentEl.appendChild(gazeHelp);\n        this.helpEls.gazeHelp = gazeHelp;\n    },\n\n    setupRightPointerHelp(controlsEl) {\n        this.clearGazeHelpEl();\n        const helpText = `To select something, point the laser at it and pull the trigger button.\\n\n        To move the map, point the laser at it, hold down the grip buttons, and move the controller.`;\n        const rightPointerHelpEl = this.createTextPanel(helpText);\n        rightPointerHelpEl.setAttribute('geometry', 'width', '0.18');\n        rightPointerHelpEl.setAttribute('text', 'wrapCount', '20');\n        rightPointerHelpEl.setAttribute('text', 'align', 'left');\n        rightPointerHelpEl.setAttribute('position', '0.15 0 0.05');\n        rightPointerHelpEl.setAttribute('rotation', '-90 0 0');\n        const rightPointer = controlsEl.components['progressive-controls'].right;\n        rightPointer.appendChild(rightPointerHelpEl);\n        this.helpEls.rightPointerHelpEl = rightPointerHelpEl;\n    },\n\n    setupLeftPointerHelp(controlsEl) {\n        this.clearGazeHelpEl();\n        const helpText = `To resize the map, point both the lasers at the map, hold down both triggers, and move the controllers apart or together.\\n\n        To resize and move the map at the same time, point both the lasers at the map, hold down the grip buttons on both controllers, and move the controllers around.`;\n        const leftPointerHelpEl = this.createTextPanel(helpText);\n        leftPointerHelpEl.setAttribute('geometry', 'width', '0.18');\n        leftPointerHelpEl.setAttribute('text', 'wrapCount', '20');\n        leftPointerHelpEl.setAttribute('text', 'align', 'left');\n        leftPointerHelpEl.setAttribute('position', '-0.15 0 0.05');\n        leftPointerHelpEl.setAttribute('rotation', '-90 0 0');\n        const leftPointer = controlsEl.components['progressive-controls'].left;\n        leftPointer.appendChild(leftPointerHelpEl);\n        this.helpEls.leftPointerHelpEl = leftPointerHelpEl;\n    },\n\n    showHelp() {\n        Object.keys(this.helpEls).forEach((key) => {\n            const helpEl = this.helpEls[key];\n            helpEl.setAttribute('visible', true);\n        });\n    },\n\n    hideHelp() {\n        Object.keys(this.helpEls).forEach((key) => {\n            const helpEl = this.helpEls[key];\n            helpEl.setAttribute('visible', false);\n        });\n    },\n\n    clearGazeHelpEl() {\n        if (this.helpEls.gazeHelp) {\n            this.helpEls.gazeHelp.parentEl.removeChild(this.helpEls.gazeHelp);\n            delete this.helpEls.gazeHelp;\n        }\n    },\n\n    clearPointerHelpEls() {\n        if (this.helpEls.rightPointerHelpEl) {\n            this.helpEls.rightPointerHelpEl.parentEl.removeChild(this.helpEls.rightPointerHelpEl);\n            delete this.helpEls.rightPointerHelpEl;\n        }\n        if (this.helpEls.leftPointerHelpEl) {\n            this.helpEls.leftPointerHelpEl.parentEl.removeChild(this.helpEls.leftPointerHelpEl);\n            delete this.helpEls.leftPointerHelpEl;\n        }\n    },\n\n    clearHelpEls() {\n        this.clearGazeHelpEl();\n        this.clearPointerHelpEls();\n    }\n});\n","import 'aframe';\nimport { YEARS } from './constants';\n\nconst { AFRAME } = window;\n\n/**\n * Displays a selectable button for each year\n */\nAFRAME.registerComponent('year-selector', {\n    schema: {\n        selectedYear: {\n            type: 'string'\n        },\n        selectionColor: {\n            type: 'color',\n            default: '#E5C601'\n        }\n    },\n\n    init() {\n        this.handleHoverStart = this.handleHoverStart.bind(this);\n        this.handleHoverEnd = this.handleHoverEnd.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.createButtons();\n    },\n\n    update(oldData) {\n        if (this.data.selectedYear !== oldData.selectedYear || this.data.selectionColor !== oldData.selectionColor) {\n            YEARS.forEach((year) => {\n                const button = this.buttons[year];\n                if (year === this.data.selectedYear) {\n                    button.setAttribute('material', 'color', this.data.selectionColor);\n                } else {\n                    button.setAttribute('material', 'color', '#FFFFFF');\n                }\n            });\n        }\n        if (this.data.selectedYear !== oldData.selectedYear) {\n            this.el.emit('year-changed', { year: this.data.selectedYear }, true);\n        }\n    },\n\n    remove() {\n        YEARS.forEach((year) => {\n            const button = this.buttons[year];\n            const buttonBorder = button.querySelector('.border');\n            buttonBorder.removeEventListener('hover-start', this.handleHoverStart);\n            buttonBorder.removeEventListener('hover-end', this.handleHoverEnd);\n        });\n    },\n\n    handleStateChange(evt) {\n        if (evt.detail === 'clicked') {\n            YEARS.forEach((year) => {\n                const button = this.buttons[year];\n                if (button === evt.target) {\n                    button.setAttribute('material', 'color', this.data.selectionColor);\n                    this.el.setAttribute('year-selector', 'selectedYear', year);\n                } else {\n                    button.setAttribute('material', 'color', '#FFFFFF');\n                }\n            });\n        }\n    },\n\n    handleHoverStart(evt) {\n        const buttonBorder = evt.target;\n        buttonBorder.setAttribute('material', 'color', this.data.selectionColor);\n        if (evt.detail.hand.components.haptics) {\n            evt.detail.hand.components.haptics.pulse(0.2, 10);\n        }\n    },\n\n    handleHoverEnd(evt) {\n        const buttonBorder = evt.target;\n        buttonBorder.setAttribute('material', 'color', 'black');\n    },\n\n    createButtons() {\n        let xPos = 0;\n        const buttonWidth = 0.5;\n        this.buttons = {};\n        YEARS.forEach((year) => {\n            const button = document.createElement('a-entity');\n            button.setAttribute('geometry', { primitive: 'plane', height: 0.25, width: buttonWidth });\n            button.setAttribute('class', 'selectable');\n            button.setAttribute('clickable', {});\n            button.setAttribute('onclick', 'this.emit(\"grab-start\", {}); this.emit(\"grab-end\", {});');\n            button.addEventListener('stateadded', this.handleStateChange);\n            button.setAttribute('position', `${xPos} 0 0`);\n            button.setAttribute('material', 'shader', 'flat');\n            button.setAttribute('material', 'color', '#FFFFFF');\n            button.setAttribute('text', 'value', year);\n            button.setAttribute('text', 'color', 'black');\n            button.setAttribute('text', 'wrapCount', '4');\n            button.setAttribute('text', 'align', 'center');\n            button.setAttribute('text', 'zOffset', '0.05');\n\n            const buttonBorder = document.createElement('a-plane');\n            buttonBorder.setAttribute('class', 'border');\n            buttonBorder.setAttribute('hoverable', {});\n            buttonBorder.setAttribute('position', '0 0 -0.005');\n            buttonBorder.setAttribute('material', 'shader', 'flat');\n            buttonBorder.setAttribute('material', 'color', 'black');\n            buttonBorder.setAttribute('height', 0.29);\n            buttonBorder.setAttribute('width', buttonWidth + 0.04);\n            buttonBorder.addEventListener('hover-start', this.handleHoverStart);\n            buttonBorder.addEventListener('hover-end', this.handleHoverEnd);\n\n            button.appendChild(buttonBorder);\n\n            this.buttons[year] = button;\n            this.el.appendChild(button);\n            xPos += (buttonWidth + (buttonWidth * 0.1));\n        });\n    }\n});\n","import 'aframe';\nimport { format } from 'd3-format';\n\nconst { AFRAME } = window;\n\nAFRAME.registerComponent('selection-info', {\n    schema: {\n        state: {\n            type: 'string'\n        },\n        candidate: {\n            type: 'string'\n        },\n        party: {\n            type: 'string'\n        },\n        votes: {\n            type: 'number'\n        },\n        totalVotes: {\n            type: 'number'\n        },\n        percentage: {\n            type: 'number'\n        },\n        color: {\n            type: 'color'\n        }\n    },\n\n    init() {\n        this.voteFormatter = format(',');\n        this.totalVoteFormatter = format('.3s');\n        this.percentageFormatter = format('.3p');\n    },\n\n    getInfoText() {\n        return `${this.data.state}\n            ${this.data.candidate} (${this.data.party})\n            ${this.voteFormatter(this.data.votes)} votes\n            ${this.percentageFormatter(this.data.percentage)} of ${this.totalVoteFormatter(this.data.totalVotes)} total`;\n    }\n});\n","import 'aframe';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\n/**\n * Responds to a selection event on part of the map.\n */\nAFRAME.registerComponent('selection-handler', {\n    init() {\n        this.selectionBox = new THREE.Box3Helper(new THREE.Box3(), 'black');\n        this.selectionBox.visible = false;\n        this.el.setObject3D('selectionBox', this.selectionBox);\n\n        this.stateBox = new THREE.Box3();\n        this.infoPanelAnchorPosition = new THREE.Vector3();\n\n        this.infoPanel = document.querySelector('#info-panel');\n        this.infoPanelText = document.querySelector('#info-panel-text');\n        this.infoPanelHighlight = document.querySelector('#info-panel-highlight');\n\n        this.superHands = document.querySelector('[progressive-controls]');\n        this.handleControllerChange = this.handleControllerChange.bind(this);\n        this.superHands.addEventListener('controller-progressed', this.handleControllerChange);\n\n        this.handleSelection = this.handleSelection.bind(this);\n        this.turnSelectionOff = this.turnSelectionOff.bind(this);\n        this.el.sceneEl.addEventListener('year-changed', this.turnSelectionOff);\n    },\n\n    handleControllerChange(evt) {\n        if (evt.detail.level === 'gaze') {\n            this.el.removeEventListener('grab-end', this.handleSelection);\n            this.el.addEventListener('click', this.handleSelection);\n        } else {\n            this.el.removeEventListener('click', this.handleSelection);\n            this.el.addEventListener('grab-end', this.handleSelection);\n        }\n    },\n\n    remove() {\n        this.el.removeEventListener('click', this.handleSelection);\n        this.el.removeEventListener('grab-end', this.handleSelection);\n        this.superHands.removeEventListener('controller-progressed', this.handleControllerChange);\n        this.el.sceneEl.removeEventListener('year-changed', this.turnSelectionOff);\n    },\n\n    handleSelection(evt) {\n        const targetEl = evt.target;\n        if (this.isAlreadySelected(targetEl)) {\n            this.turnSelectionOff();\n        } else if (this.isSelectable(targetEl)) {\n            this.setSelectionTo(targetEl);\n        }\n    },\n\n    isAlreadySelected(targetEl) {\n        return (targetEl === this.selected);\n    },\n\n    isSelectable(targetEl) {\n        return !!(targetEl.components['selection-info']);\n    },\n\n    setSelectionTo(targetEl) {\n        this.selected = targetEl;\n        const selectedObj = this.selected.getObject3D('mesh');\n        selectedObj.geometry.computeBoundingBox();\n        this.showSelectionBoxFor(selectedObj);\n        this.showInfoPanel(selectedObj);\n    },\n\n    showSelectionBoxFor(selectedObj) {\n        const selectedObjWorldCenter = selectedObj.getWorldPosition();\n        const boxCenter = this.el.object3D.worldToLocal(selectedObjWorldCenter);\n\n        const selectionBox = new THREE.Box3();\n        selectionBox.setFromCenterAndSize(boxCenter, selectedObj.geometry.boundingBox.getSize());\n\n        this.selectionBox.box = selectionBox;\n        this.selectionBox.visible = true;\n    },\n\n    showInfoPanel() {\n        const selectionInfoComp = this.selected.components['selection-info'];\n        this.infoPanelText.setAttribute('value', selectionInfoComp.getInfoText());\n\n        this.calculateInfoPanelAnchorPosition();\n        this.infoPanel.object3D.position.copy(this.infoPanelAnchorPosition);\n\n        this.infoPanelHighlight.setAttribute('color', `#${selectionInfoComp.data.color}`);\n\n        this.infoPanel.object3D.visible = true;\n    },\n\n    calculateInfoPanelAnchorPosition() {\n        this.stateBox.setFromObject(this.selected.parentEl.object3D);\n        this.stateBox.getCenter(this.infoPanelAnchorPosition);\n        this.infoPanelAnchorPosition.setY(this.stateBox.max.y + 0.75);\n    },\n\n    needsPositionUpdate() {\n        return !(this.infoPanel.object3D.position.equals(this.infoPanelAnchorPosition));\n    },\n\n    tick() {\n        if (this.selected) {\n            this.calculateInfoPanelAnchorPosition();\n            if (this.needsPositionUpdate()) {\n                this.infoPanel.object3D.position.copy(this.infoPanelAnchorPosition);\n            }\n        }\n    },\n\n    turnSelectionOff() {\n        this.infoPanel.object3D.visible = false;\n        this.selectionBox.visible = false;\n        this.selected = null;\n    }\n});\n","import 'aframe';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\n/**\n * Responds to the pointer hovering over a 'hoverable' part of the map.\n */\nAFRAME.registerComponent('hover-handler', {\n    init() {\n        this.hoverBox = new THREE.Box3Helper(new THREE.Box3(), 'darkgrey');\n        this.hoverBox.visible = false;\n        this.el.setObject3D('hoverBox', this.hoverBox);\n\n        this.handleHoverStart = this.handleHoverStart.bind(this);\n        this.el.addEventListener('hover-start', this.handleHoverStart);\n        this.handleHoverEnd = this.handleHoverEnd.bind(this);\n        this.el.addEventListener('hover-end', this.handleHoverEnd);\n        this.el.sceneEl.addEventListener('year-changed', this.handleHoverEnd);\n    },\n\n    remove() {\n        this.el.removeEventListener('hover-start', this.handleHoverStart);\n        this.el.removeEventListener('hover-end', this.handleHoverEnd);\n        this.el.sceneEl.removeEventListener('year-changed', this.handleHoverEnd);\n    },\n\n    handleHoverStart(evt) {\n        this.selected = evt.target;\n        if (this.selected.components.hoverable) {\n            const selectedObj = this.selected.getObject3D('mesh');\n            const selectedObjWorldCenter = selectedObj.getWorldPosition();\n            const boxCenter = this.el.object3D.worldToLocal(selectedObjWorldCenter);\n\n            selectedObj.geometry.computeBoundingBox();\n            const selectionBox = new THREE.Box3();\n            selectionBox.setFromCenterAndSize(boxCenter, selectedObj.geometry.boundingBox.getSize());\n\n            if (evt.detail.hand.components.haptics) {\n                evt.detail.hand.components.haptics.pulse(0.2, 10);\n            }\n            this.hoverBox.box = selectionBox;\n            this.hoverBox.visible = true;\n        }\n    },\n\n    handleHoverEnd() {\n        this.hoverBox.visible = false;\n        this.selected = null;\n    }\n});\n","import * as constants from './constants';\n\nconst candidateInfo = {\n    'Trump, Donald J.': {\n        firstName: 'Donald J.',\n        lastName: 'Trump',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Clinton, Hillary': {\n        firstName: 'Hillary',\n        lastName: 'Clinton',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Johnson, Gary': {\n        firstName: 'Gary',\n        lastName: 'Johnson',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    },\n    'Stein, Jill': {\n        firstName: 'Jill',\n        lastName: 'Stein',\n        party: 'GRE',\n        color: constants.GREEN_PARTY_GREEN\n    },\n    'McMullin, Evan': {\n        firstName: 'Evan',\n        lastName: 'McMullin',\n        party: 'IND',\n        color: constants.INDEPENDENT_PURPLE\n    },\n    'Obama, Barack': {\n        firstName: 'Barak',\n        lastName: 'Obama',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Romney, Mitt': {\n        firstName: 'Mitt',\n        lastName: 'Romney',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'McCain, John': {\n        firstName: 'John',\n        lastName: 'McCain',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Nader, Ralph': {\n        firstName: 'Ralph',\n        lastName: 'Nader',\n        party: 'IND',\n        color: constants.INDEPENDENT_PURPLE\n    },\n    'Barr, Bob': {\n        firstName: 'Bob',\n        lastName: 'Barr',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    },\n    'Bush, George W.': {\n        firstName: 'George W.',\n        lastName: 'Bush',\n        party: 'R',\n        color: constants.REPUBLICAN_RED\n    },\n    'Kerry, John F.': {\n        firstName: 'John F.',\n        lastName: 'Kerry',\n        party: 'D',\n        color: constants.DEMOCRAT_BLUE\n    },\n    'Badnarik, Michael': {\n        firstName: 'Michael',\n        lastName: 'Badnarik',\n        party: 'LIB',\n        color: constants.LIBERTARIAN_GOLD\n    }\n};\n\nexport default candidateInfo;\n","import 'aframe';\nimport { scaleLinear } from 'd3-scale';\nimport * as constants from './constants';\nimport candidateInfo from './candidate-info';\n\nconst { AFRAME } = window;\nconst { THREE } = AFRAME;\n\nconst invisibleMaterial = new THREE.MeshBasicMaterial({ visible: false });\n\nconst createExtrudedAndScaledGeometry = (height, stateShapes, percentage, zPosition) => {\n    const extrudeSettings = {\n        amount: height,\n        bevelEnabled: false\n    };\n\n    const extrudedFeatureGeometry = new THREE.ExtrudeGeometry(stateShapes, extrudeSettings);\n    extrudedFeatureGeometry.computeBoundingBox();\n    const center = extrudedFeatureGeometry.boundingBox.getCenter();\n    extrudedFeatureGeometry.center();\n    extrudedFeatureGeometry.scale(percentage, percentage, 1);\n    extrudedFeatureGeometry.translate(center.x, center.y, center.z + zPosition);\n    return extrudedFeatureGeometry;\n};\nconst createExtrudedAndScaledGeometryPerShape = (height, stateShapes, percentage, zPosition) => {\n    const extrudeSettings = {\n        amount: height,\n        bevelEnabled: false\n    };\n    const extrudeGeometry = new THREE.Geometry();\n    stateShapes.forEach((stateShape) => {\n        const extrudedFeatureGeometry = new THREE.ExtrudeGeometry(stateShape, extrudeSettings);\n        extrudedFeatureGeometry.computeBoundingBox();\n        const center = extrudedFeatureGeometry.boundingBox.getCenter();\n        extrudedFeatureGeometry.center();\n        extrudedFeatureGeometry.scale(percentage, percentage, 1);\n        extrudedFeatureGeometry.translate(center.x, center.y, center.z + zPosition);\n\n        extrudeGeometry.merge(extrudedFeatureGeometry);\n    });\n    return extrudeGeometry;\n};\n\nconst createSelectionMask = (inputGeometry, name, attributes) => {\n    const selectionMaskGeometry = new THREE.BufferGeometry();\n    selectionMaskGeometry.fromGeometry(inputGeometry);\n    selectionMaskGeometry.computeBoundingBox();\n    const center = selectionMaskGeometry.boundingBox.getCenter();\n    selectionMaskGeometry.translate(-center.x, -center.y, -center.z);\n\n    const mesh = new THREE.Mesh(selectionMaskGeometry, invisibleMaterial);\n    mesh.name = name;\n    const selectionMaskEntity = document.createElement('a-entity');\n    selectionMaskEntity.setAttribute('id', name);\n    selectionMaskEntity.setAttribute('position', center);\n    selectionMaskEntity.setAttribute('class', 'selectable');\n    selectionMaskEntity.setAttribute('selection-info', attributes);\n    selectionMaskEntity.setAttribute('hoverable', '');\n    selectionMaskEntity.setObject3D('mesh', mesh);\n    return selectionMaskEntity;\n};\n\nAFRAME.registerComponent('cartogram-renderer', {\n    dependencies: ['geo-projection'],\n    schema: {\n        maxExtrudeHeight: {\n            default: 1.6\n        }\n    },\n    init() {\n        this.geoProjectionComponent = this.el.components['geo-projection'];\n        this.system = this.el.sceneEl.systems['geo-projection'];\n        this.handleGeoDataReady = this.handleGeoDataReady.bind(this);\n        this.handleElectionDataReady = this.handleElectionDataReady.bind(this);\n        this.el.addEventListener('geo-data-ready', this.handleGeoDataReady);\n        this.el.addEventListener('election-data-loaded', this.handleElectionDataReady);\n    },\n    remove() {\n        this.el.removeEventListener('geo-data-ready', this.handleGeoDataReady);\n        this.el.removeEventListener('election-data-loaded', this.handleElectionDataReady);\n        this.clearMap(true);\n    },\n    update(oldData) {\n        if (this.data.maxExtrudeHeight !== oldData.maxExtrudeHeight) {\n            this.render();\n        }\n    },\n    handleGeoDataReady() {\n        this.render();\n    },\n    handleElectionDataReady(evt) {\n        const electionDataLoadEvent = evt.detail;\n        this.votesByFipsCode = electionDataLoadEvent.votesByFipsCode;\n        this.maxTotalVoters = electionDataLoadEvent.maxTotalVoters;\n        this.render();\n    },\n    isReady() {\n        return !!(this.votesByFipsCode && this.geoProjectionComponent.geoJson);\n    },\n    render() {\n        this.clearMap();\n        if (!this.isReady()) return;\n\n        // Determine the vertical scale for the entire country using the state with the largest number of total voters\n        // as equaling the max extrude height\n        const extrudeScale = scaleLinear()\n            .domain([0, this.maxTotalVoters])\n            .range([0, this.data.maxExtrudeHeight]);\n\n        const candidateMetadata = {};\n\n        this.geoProjectionComponent.geoJson.features.forEach((feature) => {\n            const votingData = this.votesByFipsCode[feature.id];\n            const mapRenderContext = this.system.renderToContext(feature, this.geoProjectionComponent.projection);\n            const stateShapes = mapRenderContext.toShapes();\n\n            let zPosition = 0;\n\n            const stateSelectionEntity = document.createElement('a-entity');\n            stateSelectionEntity.setAttribute('id', `state-${feature.id}`);\n            stateSelectionEntity.setAttribute('class', 'state-selection-mask');\n\n            votingData.forEach((candidateData) => {\n                const percentage = (candidateData.votes / candidateData.totalVoters);\n                const height = extrudeScale(candidateData.votes);\n\n                if (!candidateMetadata[candidateData.name]) {\n                    const info = candidateInfo[candidateData.name];\n                    candidateMetadata[candidateData.name] = {\n                        geometry: new THREE.Geometry(),\n                        ...info\n                    };\n                }\n                const candidateMetadatum = candidateMetadata[candidateData.name];\n                const extrudeGeometry = candidateMetadatum.geometry;\n\n                // Hawaii looks better when rendered per shape\n                let featureGeometry;\n                if (feature.id === '15' || feature.id === '02') {\n                    featureGeometry = createExtrudedAndScaledGeometryPerShape(height, stateShapes, percentage, zPosition);\n                } else {\n                    featureGeometry = createExtrudedAndScaledGeometry(height, stateShapes, percentage, zPosition);\n                }\n                extrudeGeometry.merge(featureGeometry);\n\n                const candidateName = `${candidateMetadatum.firstName} ${candidateMetadatum.lastName}`;\n                const attributes = {\n                    state: feature.properties.name,\n                    candidate: candidateName,\n                    party: candidateMetadatum.party,\n                    votes: candidateData.votes,\n                    percentage,\n                    totalVotes: candidateData.totalVoters,\n                    color: candidateMetadatum.color.getHexString()\n                };\n                const selectionMask = createSelectionMask(featureGeometry, `${feature.id}-${candidateMetadatum.lastName}`, attributes);\n                stateSelectionEntity.appendChild(selectionMask);\n                zPosition += height;\n            });\n            this.el.appendChild(stateSelectionEntity);\n        });\n\n        Object.keys(candidateMetadata).forEach((candidateName) => {\n            const candidateMetadatum = candidateMetadata[candidateName];\n            // Convert the extrude geometry into a buffer geometry for better rendering performance\n            const extrudeBufferGeometry = new THREE.BufferGeometry();\n            extrudeBufferGeometry.fromGeometry(candidateMetadatum.geometry);\n\n            const material = new THREE.MeshLambertMaterial({ color: candidateMetadatum.color });\n            const extrudedMap = new THREE.Mesh(extrudeBufferGeometry, material);\n            this.el.setObject3D(candidateName, extrudedMap);\n        });\n\n        const mapRenderContextForOutline = this.system.renderToContext(this.geoProjectionComponent.geoJson, this.geoProjectionComponent.projection);\n        const stateOutlineGeometry = new THREE.BufferGeometry();\n        const stateOutlineVertices = mapRenderContextForOutline.toVertices();\n        stateOutlineGeometry.addAttribute('position', new THREE.Float32BufferAttribute(stateOutlineVertices, 3));\n        const stateOutlineMaterial = new THREE.LineBasicMaterial({ color: constants.DARK_GRAY });\n        const stateOutlines = new THREE.LineSegments(stateOutlineGeometry, stateOutlineMaterial);\n        this.el.setObject3D('lines', stateOutlines);\n    },\n    clearMap(clearAll = false) {\n        Object.keys(this.el.object3DMap).forEach((key) => {\n            if (clearAll || !['hoverBox', 'selectionBox', 'outlineMap'].includes(key)) {\n                this.el.removeObject3D(key);\n            }\n        });\n        this.el.querySelectorAll('.state-selection-mask').forEach((maskEl) => {\n            this.el.removeChild(maskEl);\n        });\n    }\n});\n","import 'aframe';\nimport maxVoters from './assets/maxvoters.json';\n\nconst { AFRAME } = window;\n\nAFRAME.registerComponent('election-data-loader', {\n    schema: {\n        year: {\n            type: 'string'\n        }\n    },\n\n    init() {\n        this.handleDataLoaded = this.handleDataLoaded.bind(this);\n        this.handleYearChanged = this.handleYearChanged.bind(this);\n        this.el.sceneEl.addEventListener('year-changed', this.handleYearChanged);\n        this.yearText = document.querySelector('#year');\n    },\n\n    remove() {\n        this.el.sceneEl.removeEventListener('year-changed', this.handleYearChanged);\n    },\n\n    update(oldData) {\n        if (this.data.year && this.data.year !== oldData.year) {\n            fetch(`assets/federalelections${this.data.year}.json`)\n                .then(response => response.json())\n                .then(this.handleDataLoaded)\n                .then(() => { this.yearText.setAttribute('value', this.data.year); })\n                .catch((error) => { console.error(error); });\n        }\n    },\n\n    handleYearChanged(evt) {\n        this.el.setAttribute('election-data-loader', 'year', evt.detail.year);\n    },\n\n    handleDataLoaded(votingData) {\n        const votesByFipsCode = votingData.reduce((accum, d) => {\n            if (!accum[d.fips]) {\n                accum[d.fips] = [];\n            }\n            accum[d.fips].push(d);\n            return accum;\n        }, {});\n        const maxTotalVoters = maxVoters.totalVoters;\n        this.el.emit('election-data-loaded', { votesByFipsCode, maxTotalVoters });\n    }\n});\n","import 'aframe';\nimport 'aframe-geo-projection-component';\nimport 'super-hands';\nimport 'aframe-animation-component';\nimport 'aframe-haptics-component';\nimport 'aframe-look-at-component';\nimport './election-data-loader';\nimport './cartogram-renderer';\nimport './hover-handler';\nimport './selection-handler';\nimport './selection-info';\nimport './year-selector';\nimport './help';\n"],"sourceRoot":""}